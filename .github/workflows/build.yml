name: Build and Analyze
on:
  push:
    branches:
      - main
      - master
      - dev
  pull_request:
    types: [opened, synchronize, reopened]
  # Analyse programmée hebdomadaire pour surveiller la dette technique
  schedule:
    - cron: '0 2 * * 1'  # Tous les lundis à 2h du matin

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Désactive les clones superficiels pour une meilleure analyse
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-core.txt
          pip install pytest pytest-cov
          pip install bandit
          bandit -r gbpbot -f html -o bandit-report.html
          pip install pylint ruff
          pylint gbpbot
          ruff check gbpbot
          pip install safety
          safety check -r requirements.txt
      
      - name: Run tests with coverage
        run: |
          pytest --cov=gbpbot --cov-report=xml:coverage.xml
        continue-on-error: true  # Ne pas bloquer l'analyse si certains tests échouent
      
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
      - name: SonarCloud Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 